#include <iostream>
#include <vector>
#include <numeric>
#include <Eigen/Dense>
#include "mex.h"
#include "matrix.h"





using namespace Eigen;



void solver_relpose_5p(Eigen::MatrixXd const& NE, std::vector<Eigen::MatrixXcd>* w)
{
    // Compute coefficients
    
double const* NE_data = NE.data();
double const NE111 = NE_data[0];
double const NE211 = NE_data[1];
double const NE311 = NE_data[2];
double const NE411 = NE_data[3];
double const NE121 = NE_data[4];
double const NE221 = NE_data[5];
double const NE321 = NE_data[6];
double const NE421 = NE_data[7];
double const NE131 = NE_data[8];
double const NE231 = NE_data[9];
double const NE331 = NE_data[10];
double const NE431 = NE_data[11];
double const NE112 = NE_data[12];
double const NE212 = NE_data[13];
double const NE312 = NE_data[14];
double const NE412 = NE_data[15];
double const NE122 = NE_data[16];
double const NE222 = NE_data[17];
double const NE322 = NE_data[18];
double const NE422 = NE_data[19];
double const NE132 = NE_data[20];
double const NE232 = NE_data[21];
double const NE332 = NE_data[22];
double const NE432 = NE_data[23];
double const NE113 = NE_data[24];
double const NE213 = NE_data[25];
double const NE313 = NE_data[26];
double const NE413 = NE_data[27];
double const NE123 = NE_data[28];
double const NE223 = NE_data[29];
double const NE323 = NE_data[30];
double const NE423 = NE_data[31];
double const NE133 = NE_data[32];
double const NE233 = NE_data[33];
double const NE333 = NE_data[34];
double const NE433 = NE_data[35];
    VectorXd coeffs(200);
  double _t2_ = NE111*NE111;
  double _t3_ = NE112*NE112;
  double _t4_ = NE113*NE113;
  double _t5_ = NE121*NE121;
  double _t6_ = NE122*NE122;
  double _t7_ = NE123*NE123;
  double _t8_ = NE131*NE131;
  double _t9_ = NE132*NE132;
  double _t10_ = NE133*NE133;
  double _t11_ = NE211*NE211;
  double _t12_ = NE212*NE212;
  double _t13_ = NE213*NE213;
  double _t14_ = NE221*NE221;
  double _t15_ = NE222*NE222;
  double _t16_ = NE223*NE223;
  double _t17_ = NE231*NE231;
  double _t18_ = NE232*NE232;
  double _t19_ = NE233*NE233;
  double _t20_ = NE311*NE311;
  double _t21_ = NE312*NE312;
  double _t22_ = NE313*NE313;
  double _t23_ = NE321*NE321;
  double _t24_ = NE322*NE322;
  double _t25_ = NE323*NE323;
  double _t26_ = NE331*NE331;
  double _t27_ = NE332*NE332;
  double _t28_ = NE333*NE333;
  double _t29_ = NE411*NE411;
  double _t30_ = NE412*NE412;
  double _t31_ = NE413*NE413;
  double _t32_ = NE421*NE421;
  double _t33_ = NE422*NE422;
  double _t34_ = NE423*NE423;
  double _t35_ = NE431*NE431;
  double _t36_ = NE432*NE432;
  double _t37_ = NE433*NE433;
  double _t38_ = NE111*NE121*2.0;
  double _t39_ = NE112*NE122*2.0;
  double _t40_ = NE113*NE123*2.0;
  double _t41_ = NE111*NE131*2.0;
  double _t42_ = NE112*NE132*2.0;
  double _t43_ = NE113*NE133*2.0;
  double _t44_ = NE121*NE131*2.0;
  double _t45_ = NE122*NE132*2.0;
  double _t46_ = NE123*NE133*2.0;
  double _t47_ = NE111*NE211*2.0;
  double _t48_ = NE111*NE211*4.0;
  double _t49_ = NE112*NE212*2.0;
  double _t50_ = NE112*NE212*4.0;
  double _t51_ = NE113*NE213*2.0;
  double _t52_ = NE113*NE213*4.0;
  double _t53_ = NE111*NE221*2.0;
  double _t54_ = NE121*NE211*2.0;
  double _t55_ = NE112*NE222*2.0;
  double _t56_ = NE122*NE212*2.0;
  double _t57_ = NE113*NE223*2.0;
  double _t58_ = NE123*NE213*2.0;
  double _t59_ = NE111*NE231*2.0;
  double _t60_ = NE121*NE221*2.0;
  double _t61_ = NE131*NE211*2.0;
  double _t62_ = NE112*NE232*2.0;
  double _t63_ = NE121*NE221*4.0;
  double _t64_ = NE122*NE222*2.0;
  double _t65_ = NE132*NE212*2.0;
  double _t66_ = NE113*NE233*2.0;
  double _t67_ = NE122*NE222*4.0;
  double _t68_ = NE123*NE223*2.0;
  double _t69_ = NE133*NE213*2.0;
  double _t70_ = NE123*NE223*4.0;
  double _t71_ = NE121*NE231*2.0;
  double _t72_ = NE131*NE221*2.0;
  double _t73_ = NE122*NE232*2.0;
  double _t74_ = NE132*NE222*2.0;
  double _t75_ = NE123*NE233*2.0;
  double _t76_ = NE133*NE223*2.0;
  double _t77_ = NE131*NE231*2.0;
  double _t78_ = NE131*NE231*4.0;
  double _t79_ = NE132*NE232*2.0;
  double _t80_ = NE132*NE232*4.0;
  double _t81_ = NE133*NE233*2.0;
  double _t82_ = NE133*NE233*4.0;
  double _t83_ = NE111*NE311*2.0;
  double _t84_ = NE111*NE311*4.0;
  double _t85_ = NE112*NE312*2.0;
  double _t86_ = NE112*NE312*4.0;
  double _t87_ = NE113*NE313*2.0;
  double _t88_ = NE113*NE313*4.0;
  double _t89_ = NE111*NE321*2.0;
  double _t90_ = NE121*NE311*2.0;
  double _t91_ = NE211*NE221*2.0;
  double _t92_ = NE112*NE322*2.0;
  double _t93_ = NE122*NE312*2.0;
  double _t94_ = NE212*NE222*2.0;
  double _t95_ = NE113*NE323*2.0;
  double _t96_ = NE123*NE313*2.0;
  double _t97_ = NE213*NE223*2.0;
  double _t98_ = NE111*NE331*2.0;
  double _t99_ = NE121*NE321*2.0;
  double _t100_ = NE131*NE311*2.0;
  double _t101_ = NE211*NE231*2.0;
  double _t102_ = NE112*NE332*2.0;
  double _t103_ = NE121*NE321*4.0;
  double _t104_ = NE122*NE322*2.0;
  double _t105_ = NE132*NE312*2.0;
  double _t106_ = NE212*NE232*2.0;
  double _t107_ = NE113*NE333*2.0;
  double _t108_ = NE122*NE322*4.0;
  double _t109_ = NE123*NE323*2.0;
  double _t110_ = NE133*NE313*2.0;
  double _t111_ = NE213*NE233*2.0;
  double _t112_ = NE123*NE323*4.0;
  double _t113_ = NE121*NE331*2.0;
  double _t114_ = NE131*NE321*2.0;
  double _t115_ = NE221*NE231*2.0;
  double _t116_ = NE122*NE332*2.0;
  double _t117_ = NE132*NE322*2.0;
  double _t118_ = NE222*NE232*2.0;
  double _t119_ = NE123*NE333*2.0;
  double _t120_ = NE133*NE323*2.0;
  double _t121_ = NE223*NE233*2.0;
  double _t122_ = NE131*NE331*2.0;
  double _t123_ = NE131*NE331*4.0;
  double _t124_ = NE132*NE332*2.0;
  double _t125_ = NE132*NE332*4.0;
  double _t126_ = NE133*NE333*2.0;
  double _t127_ = NE133*NE333*4.0;
  double _t128_ = NE111*NE411*2.0;
  double _t129_ = NE211*NE311*2.0;
  double _t130_ = NE111*NE411*4.0;
  double _t131_ = NE112*NE412*2.0;
  double _t132_ = NE211*NE311*4.0;
  double _t133_ = NE212*NE312*2.0;
  double _t134_ = NE112*NE412*4.0;
  double _t135_ = NE113*NE413*2.0;
  double _t136_ = NE212*NE312*4.0;
  double _t137_ = NE213*NE313*2.0;
  double _t138_ = NE113*NE413*4.0;
  double _t139_ = NE213*NE313*4.0;
  double _t140_ = NE111*NE421*2.0;
  double _t141_ = NE121*NE411*2.0;
  double _t142_ = NE211*NE321*2.0;
  double _t143_ = NE221*NE311*2.0;
  double _t144_ = NE112*NE422*2.0;
  double _t145_ = NE122*NE412*2.0;
  double _t146_ = NE212*NE322*2.0;
  double _t147_ = NE222*NE312*2.0;
  double _t148_ = NE113*NE423*2.0;
  double _t149_ = NE123*NE413*2.0;
  double _t150_ = NE213*NE323*2.0;
  double _t151_ = NE223*NE313*2.0;
  double _t152_ = NE111*NE431*2.0;
  double _t153_ = NE121*NE421*2.0;
  double _t154_ = NE131*NE411*2.0;
  double _t155_ = NE211*NE331*2.0;
  double _t156_ = NE221*NE321*2.0;
  double _t157_ = NE231*NE311*2.0;
  double _t158_ = NE112*NE432*2.0;
  double _t159_ = NE121*NE421*4.0;
  double _t160_ = NE122*NE422*2.0;
  double _t161_ = NE132*NE412*2.0;
  double _t162_ = NE212*NE332*2.0;
  double _t163_ = NE221*NE321*4.0;
  double _t164_ = NE222*NE322*2.0;
  double _t165_ = NE232*NE312*2.0;
  double _t166_ = NE113*NE433*2.0;
  double _t167_ = NE122*NE422*4.0;
  double _t168_ = NE123*NE423*2.0;
  double _t169_ = NE133*NE413*2.0;
  double _t170_ = NE213*NE333*2.0;
  double _t171_ = NE222*NE322*4.0;
  double _t172_ = NE223*NE323*2.0;
  double _t173_ = NE233*NE313*2.0;
  double _t174_ = NE123*NE423*4.0;
  double _t175_ = NE223*NE323*4.0;
  double _t176_ = NE121*NE431*2.0;
  double _t177_ = NE131*NE421*2.0;
  double _t178_ = NE221*NE331*2.0;
  double _t179_ = NE231*NE321*2.0;
  double _t180_ = NE122*NE432*2.0;
  double _t181_ = NE132*NE422*2.0;
  double _t182_ = NE222*NE332*2.0;
  double _t183_ = NE232*NE322*2.0;
  double _t184_ = NE123*NE433*2.0;
  double _t185_ = NE133*NE423*2.0;
  double _t186_ = NE223*NE333*2.0;
  double _t187_ = NE233*NE323*2.0;
  double _t188_ = NE131*NE431*2.0;
  double _t189_ = NE231*NE331*2.0;
  double _t190_ = NE131*NE431*4.0;
  double _t191_ = NE132*NE432*2.0;
  double _t192_ = NE231*NE331*4.0;
  double _t193_ = NE232*NE332*2.0;
  double _t194_ = NE132*NE432*4.0;
  double _t195_ = NE133*NE433*2.0;
  double _t196_ = NE232*NE332*4.0;
  double _t197_ = NE233*NE333*2.0;
  double _t198_ = NE133*NE433*4.0;
  double _t199_ = NE233*NE333*4.0;
  double _t200_ = NE211*NE411*2.0;
  double _t201_ = NE211*NE411*4.0;
  double _t202_ = NE212*NE412*2.0;
  double _t203_ = NE212*NE412*4.0;
  double _t204_ = NE213*NE413*2.0;
  double _t205_ = NE213*NE413*4.0;
  double _t206_ = NE211*NE421*2.0;
  double _t207_ = NE221*NE411*2.0;
  double _t208_ = NE311*NE321*2.0;
  double _t209_ = NE212*NE422*2.0;
  double _t210_ = NE222*NE412*2.0;
  double _t211_ = NE312*NE322*2.0;
  double _t212_ = NE213*NE423*2.0;
  double _t213_ = NE223*NE413*2.0;
  double _t214_ = NE313*NE323*2.0;
  double _t215_ = NE211*NE431*2.0;
  double _t216_ = NE221*NE421*2.0;
  double _t217_ = NE231*NE411*2.0;
  double _t218_ = NE311*NE331*2.0;
  double _t219_ = NE212*NE432*2.0;
  double _t220_ = NE221*NE421*4.0;
  double _t221_ = NE222*NE422*2.0;
  double _t222_ = NE232*NE412*2.0;
  double _t223_ = NE312*NE332*2.0;
  double _t224_ = NE213*NE433*2.0;
  double _t225_ = NE222*NE422*4.0;
  double _t226_ = NE223*NE423*2.0;
  double _t227_ = NE233*NE413*2.0;
  double _t228_ = NE313*NE333*2.0;
  double _t229_ = NE223*NE423*4.0;
  double _t230_ = NE221*NE431*2.0;
  double _t231_ = NE231*NE421*2.0;
  double _t232_ = NE321*NE331*2.0;
  double _t233_ = NE222*NE432*2.0;
  double _t234_ = NE232*NE422*2.0;
  double _t235_ = NE322*NE332*2.0;
  double _t236_ = NE223*NE433*2.0;
  double _t237_ = NE233*NE423*2.0;
  double _t238_ = NE323*NE333*2.0;
  double _t239_ = NE231*NE431*2.0;
  double _t240_ = NE231*NE431*4.0;
  double _t241_ = NE232*NE432*2.0;
  double _t242_ = NE232*NE432*4.0;
  double _t243_ = NE233*NE433*2.0;
  double _t244_ = NE233*NE433*4.0;
  double _t245_ = NE311*NE411*2.0;
  double _t246_ = NE311*NE411*4.0;
  double _t247_ = NE312*NE412*2.0;
  double _t248_ = NE312*NE412*4.0;
  double _t249_ = NE313*NE413*2.0;
  double _t250_ = NE313*NE413*4.0;
  double _t251_ = NE311*NE421*2.0;
  double _t252_ = NE321*NE411*2.0;
  double _t253_ = NE312*NE422*2.0;
  double _t254_ = NE322*NE412*2.0;
  double _t255_ = NE313*NE423*2.0;
  double _t256_ = NE323*NE413*2.0;
  double _t257_ = NE311*NE431*2.0;
  double _t258_ = NE321*NE421*2.0;
  double _t259_ = NE331*NE411*2.0;
  double _t260_ = NE312*NE432*2.0;
  double _t261_ = NE321*NE421*4.0;
  double _t262_ = NE322*NE422*2.0;
  double _t263_ = NE332*NE412*2.0;
  double _t264_ = NE313*NE433*2.0;
  double _t265_ = NE322*NE422*4.0;
  double _t266_ = NE323*NE423*2.0;
  double _t267_ = NE333*NE413*2.0;
  double _t268_ = NE323*NE423*4.0;
  double _t269_ = NE321*NE431*2.0;
  double _t270_ = NE331*NE421*2.0;
  double _t271_ = NE322*NE432*2.0;
  double _t272_ = NE332*NE422*2.0;
  double _t273_ = NE323*NE433*2.0;
  double _t274_ = NE333*NE423*2.0;
  double _t275_ = NE331*NE431*2.0;
  double _t276_ = NE331*NE431*4.0;
  double _t277_ = NE332*NE432*2.0;
  double _t278_ = NE332*NE432*4.0;
  double _t279_ = NE333*NE433*2.0;
  double _t280_ = NE333*NE433*4.0;
  double _t281_ = NE411*NE421*2.0;
  double _t282_ = NE412*NE422*2.0;
  double _t283_ = NE413*NE423*2.0;
  double _t284_ = NE411*NE431*2.0;
  double _t285_ = NE412*NE432*2.0;
  double _t286_ = NE413*NE433*2.0;
  double _t287_ = NE421*NE431*2.0;
  double _t288_ = NE422*NE432*2.0;
  double _t289_ = NE423*NE433*2.0;
  double _t290_ = _t2_*2.0;
  double _t291_ = _t3_*2.0;
  double _t292_ = _t4_*2.0;
  double _t293_ = _t5_*2.0;
  double _t294_ = _t6_*2.0;
  double _t295_ = _t7_*2.0;
  double _t296_ = _t8_*2.0;
  double _t297_ = _t9_*2.0;
  double _t298_ = _t10_*2.0;
  double _t299_ = _t11_*2.0;
  double _t300_ = _t12_*2.0;
  double _t301_ = _t13_*2.0;
  double _t302_ = _t14_*2.0;
  double _t303_ = _t15_*2.0;
  double _t304_ = _t16_*2.0;
  double _t305_ = _t17_*2.0;
  double _t306_ = _t18_*2.0;
  double _t307_ = _t19_*2.0;
  double _t308_ = _t20_*2.0;
  double _t309_ = _t21_*2.0;
  double _t310_ = _t22_*2.0;
  double _t311_ = _t23_*2.0;
  double _t312_ = _t24_*2.0;
  double _t313_ = _t25_*2.0;
  double _t314_ = _t26_*2.0;
  double _t315_ = _t27_*2.0;
  double _t316_ = _t28_*2.0;
  double _t317_ = _t29_*2.0;
  double _t318_ = _t30_*2.0;
  double _t319_ = _t31_*2.0;
  double _t320_ = _t32_*2.0;
  double _t321_ = _t33_*2.0;
  double _t322_ = _t34_*2.0;
  double _t323_ = _t35_*2.0;
  double _t324_ = _t36_*2.0;
  double _t325_ = _t37_*2.0;
  double _t326_ = _t38_+_t39_+_t40_;
  double _t327_ = _t41_+_t42_+_t43_;
  double _t328_ = _t44_+_t45_+_t46_;
  double _t329_ = _t48_+_t50_+_t52_;
  double _t330_ = _t63_+_t67_+_t70_;
  double _t331_ = _t78_+_t80_+_t82_;
  double _t332_ = _t84_+_t86_+_t88_;
  double _t333_ = _t91_+_t94_+_t97_;
  double _t334_ = _t101_+_t106_+_t111_;
  double _t335_ = _t103_+_t108_+_t112_;
  double _t336_ = _t115_+_t118_+_t121_;
  double _t337_ = _t123_+_t125_+_t127_;
  double _t338_ = _t130_+_t134_+_t138_;
  double _t339_ = _t132_+_t136_+_t139_;
  double _t340_ = _t159_+_t167_+_t174_;
  double _t341_ = _t163_+_t171_+_t175_;
  double _t342_ = _t190_+_t194_+_t198_;
  double _t343_ = _t192_+_t196_+_t199_;
  double _t344_ = _t201_+_t203_+_t205_;
  double _t345_ = _t208_+_t211_+_t214_;
  double _t346_ = _t218_+_t223_+_t228_;
  double _t347_ = _t220_+_t225_+_t229_;
  double _t348_ = _t232_+_t235_+_t238_;
  double _t349_ = _t240_+_t242_+_t244_;
  double _t350_ = _t246_+_t248_+_t250_;
  double _t351_ = _t261_+_t265_+_t268_;
  double _t352_ = _t276_+_t278_+_t280_;
  double _t353_ = _t281_+_t282_+_t283_;
  double _t354_ = _t284_+_t285_+_t286_;
  double _t355_ = _t287_+_t288_+_t289_;
  double _t368_ = _t53_+_t54_+_t55_+_t56_+_t57_+_t58_;
  double _t369_ = _t59_+_t61_+_t62_+_t65_+_t66_+_t69_;
  double _t370_ = _t71_+_t72_+_t73_+_t74_+_t75_+_t76_;
  double _t371_ = _t89_+_t90_+_t92_+_t93_+_t95_+_t96_;
  double _t372_ = _t98_+_t100_+_t102_+_t105_+_t107_+_t110_;
  double _t373_ = _t113_+_t114_+_t116_+_t117_+_t119_+_t120_;
  double _t374_ = _t140_+_t141_+_t144_+_t145_+_t148_+_t149_;
  double _t375_ = _t142_+_t143_+_t146_+_t147_+_t150_+_t151_;
  double _t376_ = _t152_+_t154_+_t158_+_t161_+_t166_+_t169_;
  double _t377_ = _t155_+_t157_+_t162_+_t165_+_t170_+_t173_;
  double _t378_ = _t176_+_t177_+_t180_+_t181_+_t184_+_t185_;
  double _t379_ = _t178_+_t179_+_t182_+_t183_+_t186_+_t187_;
  double _t380_ = _t206_+_t207_+_t209_+_t210_+_t212_+_t213_;
  double _t381_ = _t215_+_t217_+_t219_+_t222_+_t224_+_t227_;
  double _t382_ = _t230_+_t231_+_t233_+_t234_+_t236_+_t237_;
  double _t383_ = _t251_+_t252_+_t253_+_t254_+_t255_+_t256_;
  double _t384_ = _t257_+_t259_+_t260_+_t263_+_t264_+_t267_;
  double _t385_ = _t269_+_t270_+_t271_+_t272_+_t273_+_t274_;
  double _t386_ = _t2_+_t3_+_t4_+_t5_+_t6_+_t7_+_t8_+_t9_+_t10_;
  double _t387_ = _t11_+_t12_+_t13_+_t14_+_t15_+_t16_+_t17_+_t18_+_t19_;
  double _t388_ = _t20_+_t21_+_t22_+_t23_+_t24_+_t25_+_t26_+_t27_+_t28_;
  double _t389_ = _t29_+_t30_+_t31_+_t32_+_t33_+_t34_+_t35_+_t36_+_t37_;
  double _t390_ = _t47_+_t49_+_t51_+_t60_+_t64_+_t68_+_t77_+_t79_+_t81_;
  double _t391_ = _t83_+_t85_+_t87_+_t99_+_t104_+_t109_+_t122_+_t124_+_t126_;
  double _t392_ = _t128_+_t131_+_t135_+_t153_+_t160_+_t168_+_t188_+_t191_+_t195_;
  double _t393_ = _t129_+_t133_+_t137_+_t156_+_t164_+_t172_+_t189_+_t193_+_t197_;
  double _t394_ = _t200_+_t202_+_t204_+_t216_+_t221_+_t226_+_t239_+_t241_+_t243_;
  double _t395_ = _t245_+_t247_+_t249_+_t258_+_t262_+_t266_+_t275_+_t277_+_t279_;
  double _t356_ = _t290_+_t291_+_t292_;
  double _t357_ = _t293_+_t294_+_t295_;
  double _t358_ = _t296_+_t297_+_t298_;
  double _t359_ = _t299_+_t300_+_t301_;
  double _t360_ = _t302_+_t303_+_t304_;
  double _t361_ = _t305_+_t306_+_t307_;
  double _t362_ = _t308_+_t309_+_t310_;
  double _t363_ = _t311_+_t312_+_t313_;
  double _t364_ = _t314_+_t315_+_t316_;
  double _t365_ = _t317_+_t318_+_t319_;
  double _t366_ = _t320_+_t321_+_t322_;
  double _t367_ = _t323_+_t324_+_t325_;
  coeffs[0] = NE111*NE122*NE133-NE111*NE123*NE132-NE112*NE121*NE133+NE112*NE123*NE131+NE113*NE121*NE132-NE113*NE122*NE131;
  coeffs[1] = NE111*NE122*NE233-NE111*NE123*NE232-NE111*NE132*NE223+NE111*NE133*NE222-NE112*NE121*NE233+NE112*NE123*NE231+NE112*NE131*NE223-NE112*NE133*NE221+NE113*NE121*NE232-NE113*NE122*NE231-NE113*NE131*NE222+NE113*NE132*NE221+NE121*NE132*NE213-NE121*NE133*NE212-NE122*NE131*NE213+NE122*NE133*NE211+NE123*NE131*NE212-NE123*NE132*NE211;
  coeffs[2] = NE111*NE122*NE333-NE111*NE123*NE332-NE111*NE132*NE323+NE111*NE133*NE322-NE112*NE121*NE333+NE112*NE123*NE331+NE112*NE131*NE323-NE112*NE133*NE321+NE113*NE121*NE332-NE113*NE122*NE331-NE113*NE131*NE322+NE113*NE132*NE321+NE121*NE132*NE313-NE121*NE133*NE312-NE122*NE131*NE313+NE122*NE133*NE311+NE123*NE131*NE312-NE123*NE132*NE311;
  coeffs[3] = NE111*NE122*NE433-NE111*NE123*NE432-NE111*NE132*NE423+NE111*NE133*NE422-NE112*NE121*NE433+NE112*NE123*NE431+NE112*NE131*NE423-NE112*NE133*NE421+NE113*NE121*NE432-NE113*NE122*NE431-NE113*NE131*NE422+NE113*NE132*NE421+NE121*NE132*NE413-NE121*NE133*NE412-NE122*NE131*NE413+NE122*NE133*NE411+NE123*NE131*NE412-NE123*NE132*NE411;
  coeffs[4] = NE111*NE222*NE233-NE111*NE223*NE232-NE112*NE221*NE233+NE112*NE223*NE231+NE113*NE221*NE232-NE113*NE222*NE231-NE121*NE212*NE233+NE121*NE213*NE232+NE122*NE211*NE233-NE122*NE213*NE231-NE123*NE211*NE232+NE123*NE212*NE231+NE131*NE212*NE223-NE131*NE213*NE222-NE132*NE211*NE223+NE132*NE213*NE221+NE133*NE211*NE222-NE133*NE212*NE221;
  coeffs[5] = NE111*NE222*NE333-NE111*NE223*NE332-NE111*NE232*NE323+NE111*NE233*NE322-NE112*NE221*NE333+NE112*NE223*NE331+NE112*NE231*NE323-NE112*NE233*NE321+NE113*NE221*NE332-NE113*NE222*NE331-NE113*NE231*NE322+NE113*NE232*NE321-NE121*NE212*NE333+NE121*NE213*NE332+NE121*NE232*NE313-NE121*NE233*NE312+NE122*NE211*NE333-NE122*NE213*NE331-NE122*NE231*NE313+NE122*NE233*NE311-NE123*NE211*NE332+NE123*NE212*NE331+NE123*NE231*NE312-NE123*NE232*NE311+NE131*NE212*NE323-NE131*NE213*NE322-NE131*NE222*NE313+NE131*NE223*NE312-NE132*NE211*NE323+NE132*NE213*NE321+NE132*NE221*NE313-NE132*NE223*NE311+NE133*NE211*NE322-NE133*NE212*NE321-NE133*NE221*NE312+NE133*NE222*NE311;
  coeffs[6] = NE111*NE222*NE433-NE111*NE223*NE432-NE111*NE232*NE423+NE111*NE233*NE422-NE112*NE221*NE433+NE112*NE223*NE431+NE112*NE231*NE423-NE112*NE233*NE421+NE113*NE221*NE432-NE113*NE222*NE431-NE113*NE231*NE422+NE113*NE232*NE421-NE121*NE212*NE433+NE121*NE213*NE432+NE121*NE232*NE413-NE121*NE233*NE412+NE122*NE211*NE433-NE122*NE213*NE431-NE122*NE231*NE413+NE122*NE233*NE411-NE123*NE211*NE432+NE123*NE212*NE431+NE123*NE231*NE412-NE123*NE232*NE411+NE131*NE212*NE423-NE131*NE213*NE422-NE131*NE222*NE413+NE131*NE223*NE412-NE132*NE211*NE423+NE132*NE213*NE421+NE132*NE221*NE413-NE132*NE223*NE411+NE133*NE211*NE422-NE133*NE212*NE421-NE133*NE221*NE412+NE133*NE222*NE411;
  coeffs[7] = NE111*NE322*NE333-NE111*NE323*NE332-NE112*NE321*NE333+NE112*NE323*NE331+NE113*NE321*NE332-NE113*NE322*NE331-NE121*NE312*NE333+NE121*NE313*NE332+NE122*NE311*NE333-NE122*NE313*NE331-NE123*NE311*NE332+NE123*NE312*NE331+NE131*NE312*NE323-NE131*NE313*NE322-NE132*NE311*NE323+NE132*NE313*NE321+NE133*NE311*NE322-NE133*NE312*NE321;
  coeffs[8] = NE111*NE322*NE433-NE111*NE323*NE432-NE111*NE332*NE423+NE111*NE333*NE422-NE112*NE321*NE433+NE112*NE323*NE431+NE112*NE331*NE423-NE112*NE333*NE421+NE113*NE321*NE432-NE113*NE322*NE431-NE113*NE331*NE422+NE113*NE332*NE421-NE121*NE312*NE433+NE121*NE313*NE432+NE121*NE332*NE413-NE121*NE333*NE412+NE122*NE311*NE433-NE122*NE313*NE431-NE122*NE331*NE413+NE122*NE333*NE411-NE123*NE311*NE432+NE123*NE312*NE431+NE123*NE331*NE412-NE123*NE332*NE411+NE131*NE312*NE423-NE131*NE313*NE422-NE131*NE322*NE413+NE131*NE323*NE412-NE132*NE311*NE423+NE132*NE313*NE421+NE132*NE321*NE413-NE132*NE323*NE411+NE133*NE311*NE422-NE133*NE312*NE421-NE133*NE321*NE412+NE133*NE322*NE411;
  coeffs[9] = NE111*NE422*NE433-NE111*NE423*NE432-NE112*NE421*NE433+NE112*NE423*NE431+NE113*NE421*NE432-NE113*NE422*NE431-NE121*NE412*NE433+NE121*NE413*NE432+NE122*NE411*NE433-NE122*NE413*NE431-NE123*NE411*NE432+NE123*NE412*NE431+NE131*NE412*NE423-NE131*NE413*NE422-NE132*NE411*NE423+NE132*NE413*NE421+NE133*NE411*NE422-NE133*NE412*NE421;
  coeffs[10] = NE211*NE222*NE233-NE211*NE223*NE232-NE212*NE221*NE233+NE212*NE223*NE231+NE213*NE221*NE232-NE213*NE222*NE231;
  coeffs[11] = NE211*NE222*NE333-NE211*NE223*NE332-NE211*NE232*NE323+NE211*NE233*NE322-NE212*NE221*NE333+NE212*NE223*NE331+NE212*NE231*NE323-NE212*NE233*NE321+NE213*NE221*NE332-NE213*NE222*NE331-NE213*NE231*NE322+NE213*NE232*NE321+NE221*NE232*NE313-NE221*NE233*NE312-NE222*NE231*NE313+NE222*NE233*NE311+NE223*NE231*NE312-NE223*NE232*NE311;
  coeffs[12] = NE211*NE222*NE433-NE211*NE223*NE432-NE211*NE232*NE423+NE211*NE233*NE422-NE212*NE221*NE433+NE212*NE223*NE431+NE212*NE231*NE423-NE212*NE233*NE421+NE213*NE221*NE432-NE213*NE222*NE431-NE213*NE231*NE422+NE213*NE232*NE421+NE221*NE232*NE413-NE221*NE233*NE412-NE222*NE231*NE413+NE222*NE233*NE411+NE223*NE231*NE412-NE223*NE232*NE411;
  coeffs[13] = NE211*NE322*NE333-NE211*NE323*NE332-NE212*NE321*NE333+NE212*NE323*NE331+NE213*NE321*NE332-NE213*NE322*NE331-NE221*NE312*NE333+NE221*NE313*NE332+NE222*NE311*NE333-NE222*NE313*NE331-NE223*NE311*NE332+NE223*NE312*NE331+NE231*NE312*NE323-NE231*NE313*NE322-NE232*NE311*NE323+NE232*NE313*NE321+NE233*NE311*NE322-NE233*NE312*NE321;
  coeffs[14] = NE211*NE322*NE433-NE211*NE323*NE432-NE211*NE332*NE423+NE211*NE333*NE422-NE212*NE321*NE433+NE212*NE323*NE431+NE212*NE331*NE423-NE212*NE333*NE421+NE213*NE321*NE432-NE213*NE322*NE431-NE213*NE331*NE422+NE213*NE332*NE421-NE221*NE312*NE433+NE221*NE313*NE432+NE221*NE332*NE413-NE221*NE333*NE412+NE222*NE311*NE433-NE222*NE313*NE431-NE222*NE331*NE413+NE222*NE333*NE411-NE223*NE311*NE432+NE223*NE312*NE431+NE223*NE331*NE412-NE223*NE332*NE411+NE231*NE312*NE423-NE231*NE313*NE422-NE231*NE322*NE413+NE231*NE323*NE412-NE232*NE311*NE423+NE232*NE313*NE421+NE232*NE321*NE413-NE232*NE323*NE411+NE233*NE311*NE422-NE233*NE312*NE421-NE233*NE321*NE412+NE233*NE322*NE411;
  coeffs[15] = NE211*NE422*NE433-NE211*NE423*NE432-NE212*NE421*NE433+NE212*NE423*NE431+NE213*NE421*NE432-NE213*NE422*NE431-NE221*NE412*NE433+NE221*NE413*NE432+NE222*NE411*NE433-NE222*NE413*NE431-NE223*NE411*NE432+NE223*NE412*NE431+NE231*NE412*NE423-NE231*NE413*NE422-NE232*NE411*NE423+NE232*NE413*NE421+NE233*NE411*NE422-NE233*NE412*NE421;
  coeffs[16] = NE311*NE322*NE333-NE311*NE323*NE332-NE312*NE321*NE333+NE312*NE323*NE331+NE313*NE321*NE332-NE313*NE322*NE331;
  coeffs[17] = NE311*NE322*NE433-NE311*NE323*NE432-NE311*NE332*NE423+NE311*NE333*NE422-NE312*NE321*NE433+NE312*NE323*NE431+NE312*NE331*NE423-NE312*NE333*NE421+NE313*NE321*NE432-NE313*NE322*NE431-NE313*NE331*NE422+NE313*NE332*NE421+NE321*NE332*NE413-NE321*NE333*NE412-NE322*NE331*NE413+NE322*NE333*NE411+NE323*NE331*NE412-NE323*NE332*NE411;
  coeffs[18] = NE311*NE422*NE433-NE311*NE423*NE432-NE312*NE421*NE433+NE312*NE423*NE431+NE313*NE421*NE432-NE313*NE422*NE431-NE321*NE412*NE433+NE321*NE413*NE432+NE322*NE411*NE433-NE322*NE413*NE431-NE323*NE411*NE432+NE323*NE412*NE431+NE331*NE412*NE423-NE331*NE413*NE422-NE332*NE411*NE423+NE332*NE413*NE421+NE333*NE411*NE422-NE333*NE412*NE421;
  coeffs[19] = NE411*NE422*NE433-NE411*NE423*NE432-NE412*NE421*NE433+NE412*NE423*NE431+NE413*NE421*NE432-NE413*NE422*NE431;
  coeffs[20] = NE121*_t326_+NE131*_t327_+NE111*_t356_-NE111*_t386_;
  coeffs[21] = NE111*_t329_+NE121*_t368_+NE131*_t369_-NE111*_t390_+NE221*_t326_+NE231*_t327_+NE211*_t356_-NE211*_t386_;
  coeffs[22] = NE111*_t332_+NE121*_t371_-NE111*_t391_+NE131*_t372_+NE321*_t326_+NE331*_t327_+NE311*_t356_-NE311*_t386_;
  coeffs[23] = NE111*_t338_+NE121*_t374_-NE111*_t392_+NE131*_t376_+NE421*_t326_+NE431*_t327_+NE411*_t356_-NE411*_t386_;
  coeffs[24] = NE121*_t333_+NE131*_t334_+NE111*_t359_-NE111*_t387_+NE211*_t329_+NE221*_t368_+NE231*_t369_-NE211*_t390_;
  coeffs[25] = NE111*_t339_+NE121*_t375_-NE111*_t393_+NE131*_t377_+NE211*_t332_+NE221*_t371_-NE211*_t391_+NE231*_t372_+NE311*_t329_+NE321*_t368_+NE331*_t369_-NE311*_t390_;
  coeffs[26] = NE111*_t344_+NE121*_t380_-NE111*_t394_+NE131*_t381_+NE211*_t338_+NE221*_t374_-NE211*_t392_+NE231*_t376_+NE411*_t329_+NE421*_t368_+NE431*_t369_-NE411*_t390_;
  coeffs[27] = NE121*_t345_+NE111*_t362_+NE131*_t346_-NE111*_t388_+NE311*_t332_+NE321*_t371_-NE311*_t391_+NE331*_t372_;
  coeffs[28] = NE111*_t350_+NE121*_t383_-NE111*_t395_+NE131*_t384_+NE311*_t338_+NE321*_t374_-NE311*_t392_+NE331*_t376_+NE411*_t332_+NE421*_t371_-NE411*_t391_+NE431*_t372_;
  coeffs[29] = NE121*_t353_+NE111*_t365_+NE131*_t354_-NE111*_t389_+NE411*_t338_+NE421*_t374_-NE411*_t392_+NE431*_t376_;
  coeffs[30] = NE221*_t333_+NE231*_t334_+NE211*_t359_-NE211*_t387_;
  coeffs[31] = NE211*_t339_+NE221*_t375_-NE211*_t393_+NE231*_t377_+NE321*_t333_+NE331*_t334_+NE311*_t359_-NE311*_t387_;
  coeffs[32] = NE211*_t344_+NE221*_t380_-NE211*_t394_+NE231*_t381_+NE421*_t333_+NE431*_t334_+NE411*_t359_-NE411*_t387_;
  coeffs[33] = NE221*_t345_+NE211*_t362_+NE231*_t346_-NE211*_t388_+NE311*_t339_+NE321*_t375_-NE311*_t393_+NE331*_t377_;
  coeffs[34] = NE211*_t350_+NE221*_t383_-NE211*_t395_+NE231*_t384_+NE311*_t344_+NE321*_t380_-NE311*_t394_+NE331*_t381_+NE411*_t339_+NE421*_t375_-NE411*_t393_+NE431*_t377_;
  coeffs[35] = NE221*_t353_+NE211*_t365_+NE231*_t354_-NE211*_t389_+NE411*_t344_+NE421*_t380_-NE411*_t394_+NE431*_t381_;
  coeffs[36] = NE321*_t345_+NE311*_t362_+NE331*_t346_-NE311*_t388_;
  coeffs[37] = NE311*_t350_+NE321*_t383_-NE311*_t395_+NE331*_t384_+NE421*_t345_+NE411*_t362_+NE431*_t346_-NE411*_t388_;
  coeffs[38] = NE321*_t353_+NE311*_t365_+NE331*_t354_-NE311*_t389_+NE411*_t350_+NE421*_t383_-NE411*_t395_+NE431*_t384_;
  coeffs[39] = NE421*_t353_+NE411*_t365_+NE431*_t354_-NE411*_t389_;
  coeffs[40] = NE111*_t326_+NE131*_t328_+NE121*_t357_-NE121*_t386_;
  coeffs[41] = NE121*_t330_+NE111*_t368_+NE131*_t370_-NE121*_t390_+NE211*_t326_+NE231*_t328_+NE221*_t357_-NE221*_t386_;
  coeffs[42] = NE121*_t335_+NE111*_t371_+NE131*_t373_-NE121*_t391_+NE311*_t326_+NE331*_t328_+NE321*_t357_-NE321*_t386_;
  coeffs[43] = NE121*_t340_+NE111*_t374_+NE131*_t378_-NE121*_t392_+NE411*_t326_+NE431*_t328_+NE421*_t357_-NE421*_t386_;
  coeffs[44] = NE111*_t333_+NE131*_t336_+NE121*_t360_-NE121*_t387_+NE221*_t330_+NE211*_t368_+NE231*_t370_-NE221*_t390_;
  coeffs[45] = NE121*_t341_+NE111*_t375_+NE131*_t379_-NE121*_t393_+NE221*_t335_+NE211*_t371_+NE231*_t373_-NE221*_t391_+NE321*_t330_+NE311*_t368_+NE331*_t370_-NE321*_t390_;
  coeffs[46] = NE121*_t347_+NE111*_t380_+NE131*_t382_-NE121*_t394_+NE221*_t340_+NE211*_t374_+NE231*_t378_-NE221*_t392_+NE421*_t330_+NE411*_t368_+NE431*_t370_-NE421*_t390_;
  coeffs[47] = NE111*_t345_+NE131*_t348_+NE121*_t363_-NE121*_t388_+NE321*_t335_+NE311*_t371_+NE331*_t373_-NE321*_t391_;
  coeffs[48] = NE121*_t351_+NE111*_t383_-NE121*_t395_+NE131*_t385_+NE321*_t340_+NE311*_t374_+NE331*_t378_-NE321*_t392_+NE421*_t335_+NE411*_t371_+NE431*_t373_-NE421*_t391_;
  coeffs[49] = NE111*_t353_+NE131*_t355_+NE121*_t366_-NE121*_t389_+NE421*_t340_+NE411*_t374_+NE431*_t378_-NE421*_t392_;
  coeffs[50] = NE211*_t333_+NE231*_t336_+NE221*_t360_-NE221*_t387_;
  coeffs[51] = NE221*_t341_+NE211*_t375_+NE231*_t379_-NE221*_t393_+NE311*_t333_+NE331*_t336_+NE321*_t360_-NE321*_t387_;
  coeffs[52] = NE221*_t347_+NE211*_t380_+NE231*_t382_-NE221*_t394_+NE411*_t333_+NE431*_t336_+NE421*_t360_-NE421*_t387_;
  coeffs[53] = NE211*_t345_+NE231*_t348_+NE221*_t363_-NE221*_t388_+NE321*_t341_+NE311*_t375_+NE331*_t379_-NE321*_t393_;
  coeffs[54] = NE221*_t351_+NE211*_t383_-NE221*_t395_+NE231*_t385_+NE321*_t347_+NE311*_t380_+NE331*_t382_-NE321*_t394_+NE421*_t341_+NE411*_t375_+NE431*_t379_-NE421*_t393_;
  coeffs[55] = NE211*_t353_+NE231*_t355_+NE221*_t366_-NE221*_t389_+NE421*_t347_+NE411*_t380_+NE431*_t382_-NE421*_t394_;
  coeffs[56] = NE311*_t345_+NE331*_t348_+NE321*_t363_-NE321*_t388_;
  coeffs[57] = NE321*_t351_+NE311*_t383_-NE321*_t395_+NE331*_t385_+NE411*_t345_+NE431*_t348_+NE421*_t363_-NE421*_t388_;
  coeffs[58] = NE311*_t353_+NE331*_t355_+NE321*_t366_-NE321*_t389_+NE421*_t351_+NE411*_t383_-NE421*_t395_+NE431*_t385_;
  coeffs[59] = NE411*_t353_+NE431*_t355_+NE421*_t366_-NE421*_t389_;
  coeffs[60] = NE111*_t327_+NE121*_t328_+NE131*_t358_-NE131*_t386_;
  coeffs[61] = NE131*_t331_+NE111*_t369_+NE121*_t370_-NE131*_t390_+NE211*_t327_+NE221*_t328_+NE231*_t358_-NE231*_t386_;
  coeffs[62] = NE131*_t337_+NE111*_t372_+NE121*_t373_-NE131*_t391_+NE311*_t327_+NE321*_t328_+NE331*_t358_-NE331*_t386_;
  coeffs[63] = NE131*_t342_+NE111*_t376_+NE121*_t378_-NE131*_t392_+NE411*_t327_+NE421*_t328_+NE431*_t358_-NE431*_t386_;
  coeffs[64] = NE111*_t334_+NE121*_t336_+NE131*_t361_-NE131*_t387_+NE231*_t331_+NE211*_t369_+NE221*_t370_-NE231*_t390_;
  coeffs[65] = NE131*_t343_+NE111*_t377_+NE121*_t379_-NE131*_t393_+NE231*_t337_+NE211*_t372_+NE221*_t373_-NE231*_t391_+NE331*_t331_+NE311*_t369_+NE321*_t370_-NE331*_t390_;
  coeffs[66] = NE131*_t349_+NE111*_t381_+NE121*_t382_-NE131*_t394_+NE231*_t342_+NE211*_t376_+NE221*_t378_-NE231*_t392_+NE431*_t331_+NE411*_t369_+NE421*_t370_-NE431*_t390_;
  coeffs[67] = NE111*_t346_+NE121*_t348_+NE131*_t364_-NE131*_t388_+NE331*_t337_+NE311*_t372_+NE321*_t373_-NE331*_t391_;
  coeffs[68] = NE131*_t352_+NE111*_t384_+NE121*_t385_-NE131*_t395_+NE331*_t342_+NE311*_t376_+NE321*_t378_-NE331*_t392_+NE431*_t337_+NE411*_t372_+NE421*_t373_-NE431*_t391_;
  coeffs[69] = NE111*_t354_+NE121*_t355_+NE131*_t367_-NE131*_t389_+NE431*_t342_+NE411*_t376_+NE421*_t378_-NE431*_t392_;
  coeffs[70] = NE211*_t334_+NE221*_t336_+NE231*_t361_-NE231*_t387_;
  coeffs[71] = NE231*_t343_+NE211*_t377_+NE221*_t379_-NE231*_t393_+NE311*_t334_+NE321*_t336_+NE331*_t361_-NE331*_t387_;
  coeffs[72] = NE231*_t349_+NE211*_t381_+NE221*_t382_-NE231*_t394_+NE411*_t334_+NE421*_t336_+NE431*_t361_-NE431*_t387_;
  coeffs[73] = NE211*_t346_+NE221*_t348_+NE231*_t364_-NE231*_t388_+NE331*_t343_+NE311*_t377_+NE321*_t379_-NE331*_t393_;
  coeffs[74] = NE231*_t352_+NE211*_t384_+NE221*_t385_-NE231*_t395_+NE331*_t349_+NE311*_t381_+NE321*_t382_-NE331*_t394_+NE431*_t343_+NE411*_t377_+NE421*_t379_-NE431*_t393_;
  coeffs[75] = NE211*_t354_+NE221*_t355_+NE231*_t367_-NE231*_t389_+NE431*_t349_+NE411*_t381_+NE421*_t382_-NE431*_t394_;
  coeffs[76] = NE311*_t346_+NE321*_t348_+NE331*_t364_-NE331*_t388_;
  coeffs[77] = NE331*_t352_+NE311*_t384_+NE321*_t385_-NE331*_t395_+NE411*_t346_+NE421*_t348_+NE431*_t364_-NE431*_t388_;
  coeffs[78] = NE311*_t354_+NE321*_t355_+NE331*_t367_-NE331*_t389_+NE431*_t352_+NE411*_t384_+NE421*_t385_-NE431*_t395_;
  coeffs[79] = NE411*_t354_+NE421*_t355_+NE431*_t367_-NE431*_t389_;
  coeffs[80] = NE122*_t326_+NE132*_t327_+NE112*_t356_-NE112*_t386_;
  coeffs[81] = NE112*_t329_+NE122*_t368_+NE132*_t369_-NE112*_t390_+NE222*_t326_+NE232*_t327_+NE212*_t356_-NE212*_t386_;
  coeffs[82] = NE112*_t332_+NE122*_t371_-NE112*_t391_+NE132*_t372_+NE322*_t326_+NE332*_t327_+NE312*_t356_-NE312*_t386_;
  coeffs[83] = NE112*_t338_+NE122*_t374_-NE112*_t392_+NE132*_t376_+NE422*_t326_+NE432*_t327_+NE412*_t356_-NE412*_t386_;
  coeffs[84] = NE122*_t333_+NE132*_t334_+NE112*_t359_-NE112*_t387_+NE212*_t329_+NE222*_t368_+NE232*_t369_-NE212*_t390_;
  coeffs[85] = NE112*_t339_+NE122*_t375_-NE112*_t393_+NE132*_t377_+NE212*_t332_+NE222*_t371_-NE212*_t391_+NE232*_t372_+NE312*_t329_+NE322*_t368_+NE332*_t369_-NE312*_t390_;
  coeffs[86] = NE112*_t344_+NE122*_t380_-NE112*_t394_+NE132*_t381_+NE212*_t338_+NE222*_t374_-NE212*_t392_+NE232*_t376_+NE412*_t329_+NE422*_t368_+NE432*_t369_-NE412*_t390_;
  coeffs[87] = NE122*_t345_+NE112*_t362_+NE132*_t346_-NE112*_t388_+NE312*_t332_+NE322*_t371_-NE312*_t391_+NE332*_t372_;
  coeffs[88] = NE112*_t350_+NE122*_t383_-NE112*_t395_+NE132*_t384_+NE312*_t338_+NE322*_t374_-NE312*_t392_+NE332*_t376_+NE412*_t332_+NE422*_t371_-NE412*_t391_+NE432*_t372_;
  coeffs[89] = NE122*_t353_+NE112*_t365_+NE132*_t354_-NE112*_t389_+NE412*_t338_+NE422*_t374_-NE412*_t392_+NE432*_t376_;
  coeffs[90] = NE222*_t333_+NE232*_t334_+NE212*_t359_-NE212*_t387_;
  coeffs[91] = NE212*_t339_+NE222*_t375_-NE212*_t393_+NE232*_t377_+NE322*_t333_+NE332*_t334_+NE312*_t359_-NE312*_t387_;
  coeffs[92] = NE212*_t344_+NE222*_t380_-NE212*_t394_+NE232*_t381_+NE422*_t333_+NE432*_t334_+NE412*_t359_-NE412*_t387_;
  coeffs[93] = NE222*_t345_+NE212*_t362_+NE232*_t346_-NE212*_t388_+NE312*_t339_+NE322*_t375_-NE312*_t393_+NE332*_t377_;
  coeffs[94] = NE212*_t350_+NE222*_t383_-NE212*_t395_+NE232*_t384_+NE312*_t344_+NE322*_t380_-NE312*_t394_+NE332*_t381_+NE412*_t339_+NE422*_t375_-NE412*_t393_+NE432*_t377_;
  coeffs[95] = NE222*_t353_+NE212*_t365_+NE232*_t354_-NE212*_t389_+NE412*_t344_+NE422*_t380_-NE412*_t394_+NE432*_t381_;
  coeffs[96] = NE322*_t345_+NE312*_t362_+NE332*_t346_-NE312*_t388_;
  coeffs[97] = NE312*_t350_+NE322*_t383_-NE312*_t395_+NE332*_t384_+NE422*_t345_+NE412*_t362_+NE432*_t346_-NE412*_t388_;
  coeffs[98] = NE322*_t353_+NE312*_t365_+NE332*_t354_-NE312*_t389_+NE412*_t350_+NE422*_t383_-NE412*_t395_+NE432*_t384_;
  coeffs[99] = NE422*_t353_+NE412*_t365_+NE432*_t354_-NE412*_t389_;
  coeffs[100] = NE112*_t326_+NE132*_t328_+NE122*_t357_-NE122*_t386_;
  coeffs[101] = NE122*_t330_+NE112*_t368_+NE132*_t370_-NE122*_t390_+NE212*_t326_+NE232*_t328_+NE222*_t357_-NE222*_t386_;
  coeffs[102] = NE122*_t335_+NE112*_t371_+NE132*_t373_-NE122*_t391_+NE312*_t326_+NE332*_t328_+NE322*_t357_-NE322*_t386_;
  coeffs[103] = NE122*_t340_+NE112*_t374_+NE132*_t378_-NE122*_t392_+NE412*_t326_+NE432*_t328_+NE422*_t357_-NE422*_t386_;
  coeffs[104] = NE112*_t333_+NE132*_t336_+NE122*_t360_-NE122*_t387_+NE222*_t330_+NE212*_t368_+NE232*_t370_-NE222*_t390_;
  coeffs[105] = NE122*_t341_+NE112*_t375_+NE132*_t379_-NE122*_t393_+NE222*_t335_+NE212*_t371_+NE232*_t373_-NE222*_t391_+NE322*_t330_+NE312*_t368_+NE332*_t370_-NE322*_t390_;
  coeffs[106] = NE122*_t347_+NE112*_t380_+NE132*_t382_-NE122*_t394_+NE222*_t340_+NE212*_t374_+NE232*_t378_-NE222*_t392_+NE422*_t330_+NE412*_t368_+NE432*_t370_-NE422*_t390_;
  coeffs[107] = NE112*_t345_+NE132*_t348_+NE122*_t363_-NE122*_t388_+NE322*_t335_+NE312*_t371_+NE332*_t373_-NE322*_t391_;
  coeffs[108] = NE122*_t351_+NE112*_t383_-NE122*_t395_+NE132*_t385_+NE322*_t340_+NE312*_t374_+NE332*_t378_-NE322*_t392_+NE422*_t335_+NE412*_t371_+NE432*_t373_-NE422*_t391_;
  coeffs[109] = NE112*_t353_+NE132*_t355_+NE122*_t366_-NE122*_t389_+NE422*_t340_+NE412*_t374_+NE432*_t378_-NE422*_t392_;
  coeffs[110] = NE212*_t333_+NE232*_t336_+NE222*_t360_-NE222*_t387_;
  coeffs[111] = NE222*_t341_+NE212*_t375_+NE232*_t379_-NE222*_t393_+NE312*_t333_+NE332*_t336_+NE322*_t360_-NE322*_t387_;
  coeffs[112] = NE222*_t347_+NE212*_t380_+NE232*_t382_-NE222*_t394_+NE412*_t333_+NE432*_t336_+NE422*_t360_-NE422*_t387_;
  coeffs[113] = NE212*_t345_+NE232*_t348_+NE222*_t363_-NE222*_t388_+NE322*_t341_+NE312*_t375_+NE332*_t379_-NE322*_t393_;
  coeffs[114] = NE222*_t351_+NE212*_t383_-NE222*_t395_+NE232*_t385_+NE322*_t347_+NE312*_t380_+NE332*_t382_-NE322*_t394_+NE422*_t341_+NE412*_t375_+NE432*_t379_-NE422*_t393_;
  coeffs[115] = NE212*_t353_+NE232*_t355_+NE222*_t366_-NE222*_t389_+NE422*_t347_+NE412*_t380_+NE432*_t382_-NE422*_t394_;
  coeffs[116] = NE312*_t345_+NE332*_t348_+NE322*_t363_-NE322*_t388_;
  coeffs[117] = NE322*_t351_+NE312*_t383_-NE322*_t395_+NE332*_t385_+NE412*_t345_+NE432*_t348_+NE422*_t363_-NE422*_t388_;
  coeffs[118] = NE312*_t353_+NE332*_t355_+NE322*_t366_-NE322*_t389_+NE422*_t351_+NE412*_t383_-NE422*_t395_+NE432*_t385_;
  coeffs[119] = NE412*_t353_+NE432*_t355_+NE422*_t366_-NE422*_t389_;
  coeffs[120] = NE112*_t327_+NE122*_t328_+NE132*_t358_-NE132*_t386_;
  coeffs[121] = NE132*_t331_+NE112*_t369_+NE122*_t370_-NE132*_t390_+NE212*_t327_+NE222*_t328_+NE232*_t358_-NE232*_t386_;
  coeffs[122] = NE132*_t337_+NE112*_t372_+NE122*_t373_-NE132*_t391_+NE312*_t327_+NE322*_t328_+NE332*_t358_-NE332*_t386_;
  coeffs[123] = NE132*_t342_+NE112*_t376_+NE122*_t378_-NE132*_t392_+NE412*_t327_+NE422*_t328_+NE432*_t358_-NE432*_t386_;
  coeffs[124] = NE112*_t334_+NE122*_t336_+NE132*_t361_-NE132*_t387_+NE232*_t331_+NE212*_t369_+NE222*_t370_-NE232*_t390_;
  coeffs[125] = NE132*_t343_+NE112*_t377_+NE122*_t379_-NE132*_t393_+NE232*_t337_+NE212*_t372_+NE222*_t373_-NE232*_t391_+NE332*_t331_+NE312*_t369_+NE322*_t370_-NE332*_t390_;
  coeffs[126] = NE132*_t349_+NE112*_t381_+NE122*_t382_-NE132*_t394_+NE232*_t342_+NE212*_t376_+NE222*_t378_-NE232*_t392_+NE432*_t331_+NE412*_t369_+NE422*_t370_-NE432*_t390_;
  coeffs[127] = NE112*_t346_+NE122*_t348_+NE132*_t364_-NE132*_t388_+NE332*_t337_+NE312*_t372_+NE322*_t373_-NE332*_t391_;
  coeffs[128] = NE132*_t352_+NE112*_t384_+NE122*_t385_-NE132*_t395_+NE332*_t342_+NE312*_t376_+NE322*_t378_-NE332*_t392_+NE432*_t337_+NE412*_t372_+NE422*_t373_-NE432*_t391_;
  coeffs[129] = NE112*_t354_+NE122*_t355_+NE132*_t367_-NE132*_t389_+NE432*_t342_+NE412*_t376_+NE422*_t378_-NE432*_t392_;
  coeffs[130] = NE212*_t334_+NE222*_t336_+NE232*_t361_-NE232*_t387_;
  coeffs[131] = NE232*_t343_+NE212*_t377_+NE222*_t379_-NE232*_t393_+NE312*_t334_+NE322*_t336_+NE332*_t361_-NE332*_t387_;
  coeffs[132] = NE232*_t349_+NE212*_t381_+NE222*_t382_-NE232*_t394_+NE412*_t334_+NE422*_t336_+NE432*_t361_-NE432*_t387_;
  coeffs[133] = NE212*_t346_+NE222*_t348_+NE232*_t364_-NE232*_t388_+NE332*_t343_+NE312*_t377_+NE322*_t379_-NE332*_t393_;
  coeffs[134] = NE232*_t352_+NE212*_t384_+NE222*_t385_-NE232*_t395_+NE332*_t349_+NE312*_t381_+NE322*_t382_-NE332*_t394_+NE432*_t343_+NE412*_t377_+NE422*_t379_-NE432*_t393_;
  coeffs[135] = NE212*_t354_+NE222*_t355_+NE232*_t367_-NE232*_t389_+NE432*_t349_+NE412*_t381_+NE422*_t382_-NE432*_t394_;
  coeffs[136] = NE312*_t346_+NE322*_t348_+NE332*_t364_-NE332*_t388_;
  coeffs[137] = NE332*_t352_+NE312*_t384_+NE322*_t385_-NE332*_t395_+NE412*_t346_+NE422*_t348_+NE432*_t364_-NE432*_t388_;
  coeffs[138] = NE312*_t354_+NE322*_t355_+NE332*_t367_-NE332*_t389_+NE432*_t352_+NE412*_t384_+NE422*_t385_-NE432*_t395_;
  coeffs[139] = NE412*_t354_+NE422*_t355_+NE432*_t367_-NE432*_t389_;
  coeffs[140] = NE123*_t326_+NE133*_t327_+NE113*_t356_-NE113*_t386_;
  coeffs[141] = NE113*_t329_+NE123*_t368_+NE133*_t369_-NE113*_t390_+NE223*_t326_+NE233*_t327_+NE213*_t356_-NE213*_t386_;
  coeffs[142] = NE113*_t332_+NE123*_t371_-NE113*_t391_+NE133*_t372_+NE323*_t326_+NE333*_t327_+NE313*_t356_-NE313*_t386_;
  coeffs[143] = NE113*_t338_+NE123*_t374_-NE113*_t392_+NE133*_t376_+NE423*_t326_+NE433*_t327_+NE413*_t356_-NE413*_t386_;
  coeffs[144] = NE123*_t333_+NE133*_t334_+NE113*_t359_-NE113*_t387_+NE213*_t329_+NE223*_t368_+NE233*_t369_-NE213*_t390_;
  coeffs[145] = NE113*_t339_+NE123*_t375_-NE113*_t393_+NE133*_t377_+NE213*_t332_+NE223*_t371_-NE213*_t391_+NE233*_t372_+NE313*_t329_+NE323*_t368_+NE333*_t369_-NE313*_t390_;
  coeffs[146] = NE113*_t344_+NE123*_t380_-NE113*_t394_+NE133*_t381_+NE213*_t338_+NE223*_t374_-NE213*_t392_+NE233*_t376_+NE413*_t329_+NE423*_t368_+NE433*_t369_-NE413*_t390_;
  coeffs[147] = NE123*_t345_+NE113*_t362_+NE133*_t346_-NE113*_t388_+NE313*_t332_+NE323*_t371_-NE313*_t391_+NE333*_t372_;
  coeffs[148] = NE113*_t350_+NE123*_t383_-NE113*_t395_+NE133*_t384_+NE313*_t338_+NE323*_t374_-NE313*_t392_+NE333*_t376_+NE413*_t332_+NE423*_t371_-NE413*_t391_+NE433*_t372_;
  coeffs[149] = NE123*_t353_+NE113*_t365_+NE133*_t354_-NE113*_t389_+NE413*_t338_+NE423*_t374_-NE413*_t392_+NE433*_t376_;
  coeffs[150] = NE223*_t333_+NE233*_t334_+NE213*_t359_-NE213*_t387_;
  coeffs[151] = NE213*_t339_+NE223*_t375_-NE213*_t393_+NE233*_t377_+NE323*_t333_+NE333*_t334_+NE313*_t359_-NE313*_t387_;
  coeffs[152] = NE213*_t344_+NE223*_t380_-NE213*_t394_+NE233*_t381_+NE423*_t333_+NE433*_t334_+NE413*_t359_-NE413*_t387_;
  coeffs[153] = NE223*_t345_+NE213*_t362_+NE233*_t346_-NE213*_t388_+NE313*_t339_+NE323*_t375_-NE313*_t393_+NE333*_t377_;
  coeffs[154] = NE213*_t350_+NE223*_t383_-NE213*_t395_+NE233*_t384_+NE313*_t344_+NE323*_t380_-NE313*_t394_+NE333*_t381_+NE413*_t339_+NE423*_t375_-NE413*_t393_+NE433*_t377_;
  coeffs[155] = NE223*_t353_+NE213*_t365_+NE233*_t354_-NE213*_t389_+NE413*_t344_+NE423*_t380_-NE413*_t394_+NE433*_t381_;
  coeffs[156] = NE323*_t345_+NE313*_t362_+NE333*_t346_-NE313*_t388_;
  coeffs[157] = NE313*_t350_+NE323*_t383_-NE313*_t395_+NE333*_t384_+NE423*_t345_+NE413*_t362_+NE433*_t346_-NE413*_t388_;
  coeffs[158] = NE323*_t353_+NE313*_t365_+NE333*_t354_-NE313*_t389_+NE413*_t350_+NE423*_t383_-NE413*_t395_+NE433*_t384_;
  coeffs[159] = NE423*_t353_+NE413*_t365_+NE433*_t354_-NE413*_t389_;
  coeffs[160] = NE113*_t326_+NE133*_t328_+NE123*_t357_-NE123*_t386_;
  coeffs[161] = NE123*_t330_+NE113*_t368_+NE133*_t370_-NE123*_t390_+NE213*_t326_+NE233*_t328_+NE223*_t357_-NE223*_t386_;
  coeffs[162] = NE123*_t335_+NE113*_t371_+NE133*_t373_-NE123*_t391_+NE313*_t326_+NE333*_t328_+NE323*_t357_-NE323*_t386_;
  coeffs[163] = NE123*_t340_+NE113*_t374_+NE133*_t378_-NE123*_t392_+NE413*_t326_+NE433*_t328_+NE423*_t357_-NE423*_t386_;
  coeffs[164] = NE113*_t333_+NE133*_t336_+NE123*_t360_-NE123*_t387_+NE223*_t330_+NE213*_t368_+NE233*_t370_-NE223*_t390_;
  coeffs[165] = NE123*_t341_+NE113*_t375_+NE133*_t379_-NE123*_t393_+NE223*_t335_+NE213*_t371_+NE233*_t373_-NE223*_t391_+NE323*_t330_+NE313*_t368_+NE333*_t370_-NE323*_t390_;
  coeffs[166] = NE123*_t347_+NE113*_t380_+NE133*_t382_-NE123*_t394_+NE223*_t340_+NE213*_t374_+NE233*_t378_-NE223*_t392_+NE423*_t330_+NE413*_t368_+NE433*_t370_-NE423*_t390_;
  coeffs[167] = NE113*_t345_+NE133*_t348_+NE123*_t363_-NE123*_t388_+NE323*_t335_+NE313*_t371_+NE333*_t373_-NE323*_t391_;
  coeffs[168] = NE123*_t351_+NE113*_t383_-NE123*_t395_+NE133*_t385_+NE323*_t340_+NE313*_t374_+NE333*_t378_-NE323*_t392_+NE423*_t335_+NE413*_t371_+NE433*_t373_-NE423*_t391_;
  coeffs[169] = NE113*_t353_+NE133*_t355_+NE123*_t366_-NE123*_t389_+NE423*_t340_+NE413*_t374_+NE433*_t378_-NE423*_t392_;
  coeffs[170] = NE213*_t333_+NE233*_t336_+NE223*_t360_-NE223*_t387_;
  coeffs[171] = NE223*_t341_+NE213*_t375_+NE233*_t379_-NE223*_t393_+NE313*_t333_+NE333*_t336_+NE323*_t360_-NE323*_t387_;
  coeffs[172] = NE223*_t347_+NE213*_t380_+NE233*_t382_-NE223*_t394_+NE413*_t333_+NE433*_t336_+NE423*_t360_-NE423*_t387_;
  coeffs[173] = NE213*_t345_+NE233*_t348_+NE223*_t363_-NE223*_t388_+NE323*_t341_+NE313*_t375_+NE333*_t379_-NE323*_t393_;
  coeffs[174] = NE223*_t351_+NE213*_t383_-NE223*_t395_+NE233*_t385_+NE323*_t347_+NE313*_t380_+NE333*_t382_-NE323*_t394_+NE423*_t341_+NE413*_t375_+NE433*_t379_-NE423*_t393_;
  coeffs[175] = NE213*_t353_+NE233*_t355_+NE223*_t366_-NE223*_t389_+NE423*_t347_+NE413*_t380_+NE433*_t382_-NE423*_t394_;
  coeffs[176] = NE313*_t345_+NE333*_t348_+NE323*_t363_-NE323*_t388_;
  coeffs[177] = NE323*_t351_+NE313*_t383_-NE323*_t395_+NE333*_t385_+NE413*_t345_+NE433*_t348_+NE423*_t363_-NE423*_t388_;
  coeffs[178] = NE313*_t353_+NE333*_t355_+NE323*_t366_-NE323*_t389_+NE423*_t351_+NE413*_t383_-NE423*_t395_+NE433*_t385_;
  coeffs[179] = NE413*_t353_+NE433*_t355_+NE423*_t366_-NE423*_t389_;
  coeffs[180] = NE113*_t327_+NE123*_t328_+NE133*_t358_-NE133*_t386_;
  coeffs[181] = NE133*_t331_+NE113*_t369_+NE123*_t370_-NE133*_t390_+NE213*_t327_+NE223*_t328_+NE233*_t358_-NE233*_t386_;
  coeffs[182] = NE133*_t337_+NE113*_t372_+NE123*_t373_-NE133*_t391_+NE313*_t327_+NE323*_t328_+NE333*_t358_-NE333*_t386_;
  coeffs[183] = NE133*_t342_+NE113*_t376_+NE123*_t378_-NE133*_t392_+NE413*_t327_+NE423*_t328_+NE433*_t358_-NE433*_t386_;
  coeffs[184] = NE113*_t334_+NE123*_t336_+NE133*_t361_-NE133*_t387_+NE233*_t331_+NE213*_t369_+NE223*_t370_-NE233*_t390_;
  coeffs[185] = NE133*_t343_+NE113*_t377_+NE123*_t379_-NE133*_t393_+NE233*_t337_+NE213*_t372_+NE223*_t373_-NE233*_t391_+NE333*_t331_+NE313*_t369_+NE323*_t370_-NE333*_t390_;
  coeffs[186] = NE133*_t349_+NE113*_t381_+NE123*_t382_-NE133*_t394_+NE233*_t342_+NE213*_t376_+NE223*_t378_-NE233*_t392_+NE433*_t331_+NE413*_t369_+NE423*_t370_-NE433*_t390_;
  coeffs[187] = NE113*_t346_+NE123*_t348_+NE133*_t364_-NE133*_t388_+NE333*_t337_+NE313*_t372_+NE323*_t373_-NE333*_t391_;
  coeffs[188] = NE133*_t352_+NE113*_t384_+NE123*_t385_-NE133*_t395_+NE333*_t342_+NE313*_t376_+NE323*_t378_-NE333*_t392_+NE433*_t337_+NE413*_t372_+NE423*_t373_-NE433*_t391_;
  coeffs[189] = NE113*_t354_+NE123*_t355_+NE133*_t367_-NE133*_t389_+NE433*_t342_+NE413*_t376_+NE423*_t378_-NE433*_t392_;
  coeffs[190] = NE213*_t334_+NE223*_t336_+NE233*_t361_-NE233*_t387_;
  coeffs[191] = NE233*_t343_+NE213*_t377_+NE223*_t379_-NE233*_t393_+NE313*_t334_+NE323*_t336_+NE333*_t361_-NE333*_t387_;
  coeffs[192] = NE233*_t349_+NE213*_t381_+NE223*_t382_-NE233*_t394_+NE413*_t334_+NE423*_t336_+NE433*_t361_-NE433*_t387_;
  coeffs[193] = NE213*_t346_+NE223*_t348_+NE233*_t364_-NE233*_t388_+NE333*_t343_+NE313*_t377_+NE323*_t379_-NE333*_t393_;
  coeffs[194] = NE233*_t352_+NE213*_t384_+NE223*_t385_-NE233*_t395_+NE333*_t349_+NE313*_t381_+NE323*_t382_-NE333*_t394_+NE433*_t343_+NE413*_t377_+NE423*_t379_-NE433*_t393_;
  coeffs[195] = NE213*_t354_+NE223*_t355_+NE233*_t367_-NE233*_t389_+NE433*_t349_+NE413*_t381_+NE423*_t382_-NE433*_t394_;
  coeffs[196] = NE313*_t346_+NE323*_t348_+NE333*_t364_-NE333*_t388_;
  coeffs[197] = NE333*_t352_+NE313*_t384_+NE323*_t385_-NE333*_t395_+NE413*_t346_+NE423*_t348_+NE433*_t364_-NE433*_t388_;
  coeffs[198] = NE313*_t354_+NE323*_t355_+NE333*_t367_-NE333*_t389_+NE433*_t352_+NE413*_t384_+NE423*_t385_-NE433*_t395_;
  coeffs[199] = NE413*_t354_+NE423*_t355_+NE433*_t367_-NE433*_t389_;


    // Setup elimination template
    static const int coeffs0_ind[] = { 10,30,50,70,90,110,130,150,170,190,11,31,51,71,91,111,131,151,171,191,13,33,53,73,93,113,133,153,173,193,16,36,56,76,96,116,136,156,176,196,0,20,40,60,80,100,120,140,160,180,1,21,41,61,81,101,121,141,161,181,2,22,42,62,82,102,122,142,162,182,4,24,44,64,84,104,124,144,164,184,5,25,45,65,85,105,125,145,165,185,7,27,47,67,87,107,127,147,167,187 };
    static const int coeffs1_ind[] = { 19,39,59,79,99,119,139,159,179,199,9,29,49,69,89,109,129,149,169,189,3,23,43,63,83,103,123,143,163,183,6,26,46,66,86,106,126,146,166,186,8,28,48,68,88,108,128,148,168,188,15,35,55,75,95,115,135,155,175,195,12,32,52,72,92,112,132,152,172,192,14,34,54,74,94,114,134,154,174,194,18,38,58,78,98,118,138,158,178,198,17,37,57,77,97,117,137,157,177,197 };
        

static const int C0_ind[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99};

static const int C1_ind[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99};

MatrixXd C0 = MatrixXd::Zero(10,10);
MatrixXd C1 = MatrixXd::Zero(10,10);
for (int i = 0; i < 100; i++) {
    C0(C0_ind[i]) = coeffs(coeffs0_ind[i]);
}

for (int i = 0; i < 100; i++) {
    C1(C1_ind[i]) = coeffs(coeffs1_ind[i]);
}

MatrixXd C12 = C0.fullPivLu().solve(C1);



    // Setup action matrix
    Matrix<double,16, 10> RR;
    RR << -C12.bottomRows(6), Matrix<double,10,10>::Identity(10, 10);

    static const int AM_ind[] = { 7,8,0,1,2,9,3,4,10,5 };
    Matrix<double, 10, 10> AM;
    for (int i = 0; i < 10; i++) {
        AM.row(i) = RR.row(AM_ind[i]);
    }

    MatrixXcd sols(3, 10);
    sols.setZero();

    // Solve eigenvalue problem
    EigenSolver<Matrix<double, 10, 10> > es(AM);
    ArrayXcd D = es.eigenvalues();    
    ArrayXXcd V = es.eigenvectors();

    V = (V / V.row(0).array().replicate(10, 1)).eval();


        sols.row(0) = D.transpose().array();
    sols.row(1) = V.row(5).array();
    sols.row(2) = V.row(8).array();





    Eigen::VectorXcd w1 = sols.row(0);
Eigen::VectorXcd w2 = sols.row(1);
Eigen::VectorXcd w3 = sols.row(2);
int nsols = w1.size();
for (int isol = 0; isol < nsols; ++isol) {
	Eigen::MatrixXcd _w(3, 1);
	_w(0) = w1(isol); 
	_w(1) = w2(isol); 
	_w(2) = w3(isol); 
	w->push_back(_w);
}


}

// Action = ; w3
// Quotient ring basis (V) =  w1^2, w1*w2, w1*w3, w2, w2^2, w2*w3, w3, w3^2
// Available monomials (RR*V) = w1^2*w2, w1^2*w3, w1*w2^2, w1*w2*w3, w1*w3^2, 1, w1, w1^2, w1*w2, w1*w3, w2, w2^2, w2*w3, w3, w3^2



